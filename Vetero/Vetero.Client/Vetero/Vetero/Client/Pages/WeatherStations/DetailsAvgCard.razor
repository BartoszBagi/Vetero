@page "/weather-station/details/avg/{avgDataVmString}"
@using System.Text.Json;
@using Vetero.Shared.ViewModels.WeatherStations;

<h3>DetailsAvgCard</h3>
@if (avgData == null)
{
    <p>...Loading</p>
}
<div class="row">
    <div class="col-sm-12 my-5">
        <RadzenCard Class="rz-my-6 rz-mx-auto" Style="max-width: 420px">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.H6" class="rz-display-flex rz-mt-2 rz-my-0">Dane uśrednione(do wyrzucenia jako modal pojawiający się z przycisku on Dialog z nad tabeli)</RadzenText>
                <RadzenText TextStyle="TextStyle.H6" class="text-center rz-color-on-primary-light"><strong>Szczegóły</strong></RadzenText>
                <RadzenRow RowGap="0">
                    <RadzenColumn SizeSM="6">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Data</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.Date.ToString()</b></RadzenText>
                    </RadzenColumn>
                    <RadzenColumn SizeSM="6">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Temperatura</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.Temperature ℃</b></RadzenText>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
            <RadzenCard class="rz-background-color-primary-light rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));">
                <RadzenText TextStyle="TextStyle.H6" class="text-center rz-color-on-primary-light"><strong>Szczegóły</strong></RadzenText>
                <RadzenRow RowGap="0">
                    <RadzenColumn SizeSM="6">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Prędkość wiatru</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.WindKph km/h</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Kierunek wiatru</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.WindDir</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Uv</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.Uv</b></RadzenText>
                    </RadzenColumn>
                    <RadzenColumn SizeSM="6">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Deszcz</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.TotalPrecip_in l/m²</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Ciśnienie</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.Pressure Pa</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Wilgotność</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@avgData.Humidity %</b></RadzenText>

                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
        </RadzenCard>
    </div>
</div>
@code {
    [Parameter]
    public string avgDataVmString { get; set; }
    private AvgDayDataVm avgData;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        DeserializeJsonToData();
    }

    private void DeserializeJsonToData()
    {
        var test = JsonSerializer.Deserialize<AvgDayDataVm>(avgDataVmString);
        avgData = test;
    }
}
