@page "/weather-station/details"
@using System.Globalization;
@using System.Text.Json;
@using Vetero.Client.Components.WeatherStation
@using Vetero.Shared.Enums;
@using Vetero.Shared.ViewModels.WeatherStations;

@inject IApiBroker apiBroker;
@inject NavigationManager NavigationManager

<h1 class="text-center exotic">Dane szczegółowe stacji pogodowej</h1>

@if (avgData == null)
{
    <p>Brak danych... Wybierz "05-07-2023" w celu uzyskania danych testowych.</p>
    <div class="rz-p-12 rz-text-align-center">
        <RadzenDatePicker class="rz-shadow-3" @bind-Value=@dateParameter Change="@(() => GetSpecifiedDayDetails())" />
    </div>
}
else
{
<div class="container">
    <div class="rz-p-12 rz-text-align-center">
            <RadzenDatePicker class="rz-shadow-3" @bind-Value=@dateParameter Change="@(() => GetSpecifiedDayDetails())" />
    </div>
    <RadzenTabs TabPosition="TabPosition.Top" RenderMode="TabRenderMode.Client" >
        <Tabs>
            <RadzenTabsItem Text="Średnia">
                <WeatherStationAvgCurrent avgData="avgData"/>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Dane z dnia">
                <WeatherStationDailyGrid oneDayData="oneDayData"/>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Wykres">
                 <WeatherStationChart oneDayData="oneDayData"/>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs> 
</div>
}

@code {
    private DateTime dateParameter = DateTime.Now;
    private IEnumerable<OneDayDataVm> oneDayData;
    private AvgDayDataVm avgData;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await GetSpecifiedDayDetails();
    }

    private async Task GetSpecifiedDayDetails()
    {
        oneDayData = await apiBroker.GetOneDayData(dateParameter.ToString("dd-MM-yyyy"));
        if (oneDayData.Any())
            avgData = new AvgDayDataVm(oneDayData);
    }




}